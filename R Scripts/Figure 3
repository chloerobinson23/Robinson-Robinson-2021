# Chloe Robinson, Apr 16, 2021

library(stringr) # str_split
library(reshape2) # dcast
library(vegan) # rrarefy
library(ggplot2) # ggplot
library(data.table) # setDT
library(goeveg) # scree
library(plyr) # ddply
library(gridExtra) #grid.arrange
library(ggpubr) #text_grob
library(extrafont) # get more fonts
loadfonts(device = "win")
loadfonts(device = "pdf")

# Read in cat.csv
A <- read.csv(file="bat_data_2020.csv", head=TRUE)

# Create dataframes for vegan
# Split up SampleName with pkg 'stringr'
A.1<-data.frame(A, do.call(rbind, str_split(A$Survey_ID,"_")), stringsAsFactors = FALSE)
names(A.1)[23:26] <- c("Site","Day","Month","Habitat")

# pivot to make recordings matrix of survey by species using unique recording as value
A.1.calls<-reshape2::dcast(A.1, Survey_ID ~ Species, value.var = "Recording_ID")

# move sample to rownames then delete
rownames(A.1.calls) <- A.1.calls$Survey_ID
A.1.calls$Survey_ID <- NULL

#remove columns with only zeros
calls.notnull<-A.1.calls[,colSums(A.1.calls) !=0]

#remove rows with only zeros 
calls.notnull2<-calls.notnull[rowSums(calls.notnull) !=0,]

#Convert to presence-absence matrix
#calls.notnull2[calls.notnull2>0] <-1

# Scree plots to determine number of dimensions to use for NMDS, use k=2
pdf("Scree.pdf")
# check dims
dimcheckMDS(calls.notnull2)
dev.off()

# Do 2 dimensional NMDS
nmds2<-metaMDS(calls.notnull2, k=2, trymax=100)
# stress = 0.1887221

# Stressplot Shephards curve to assess goodness of fit between observed and ordination distances
pdf("stressplot.pdf")
stressplot(nmds2)
gof <-goodness(nmds2)
gof
plot(nmds2, display = "sites", type="n", main="SSU")
points(nmds2, display="sites",cex=2*gof/mean(gof))
dev.off()
# linear R2 = 0.885, non-metric fit R2 = 0.975

# Create grouping matrix for samples by grabbing row names from above matrix
names<-data.frame(row.names(calls.notnull2), stringsAsFactors = FALSE)

# Rename the column
names(names)<-"sample"

# Copy column to row names
row.names(names)<-names$sample

# Split first column into their own fields
names.1<-data.frame(names, do.call(rbind, strsplit(names$sample,'_')), stringsAsFactors = FALSE)
names(names.1)[2:5]<-c("Site","Day","Month","Habitat")

# Remove first column
names.1 <- names.1[,-1]

# Grab sites/species scores from NMDS output
df <- data.frame(scores(nmds2, display = "sites"))

# Put it all in one df for ggplot
gg <- merge(df, names.1, by="row.names")

# create factors
gg$Site <- factor(gg$Site,
                  levels = c("MEC","HAN", "RSP", "ERT"),
                  labels = c("Mitchell-Ellis Creek Park","Hanlon Creek Park","Riverside Park","Eramosa River Trail"))
gg$Month <- factor(gg$Month,
                   levels = c("Jul","Aug", "Sep"),
                   labels = c("July","August","September"))
gg$Habitat <- factor(gg$Habitat,
                     levels = c("River","Forest"),
                     labels = c("Riverine","Forested"))


# color by site
chulls.Site <- ddply(gg, .(Site), function(gg) gg[chull(gg$NMDS1, gg$NMDS2), ])

# NMDS plot, color by site
p1 <- ggplot(data=gg, aes(x=NMDS1, y=NMDS2)) + 
  geom_polygon(data=chulls.Site, aes(x=NMDS1, y=NMDS2, fill=Site), alpha=0.7) +
  geom_point(data=gg, size = 3, aes(color=Site)) +
  ggtitle("A") +
  theme_bw() +
  theme(
    text = element_text(family = "Arial"),
    plot.title = element_text(size=14),
    axis.text.x = element_text(size=14),
    axis.text.y = element_text(size=14),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    panel.background = element_blank(), 
    axis.line = element_line(colour = "black"),
    legend.position = c(0.99,0.01),
    legend.justification = c("right","bottom"),
    legend.background = element_blank(),
    legend.key=element_blank(),
    axis.title = element_blank(),
    legend.title = element_blank(),
    legend.text = element_text(size=10))+
  scale_colour_grey(start = 0.1, end = 0.9)+
  scale_fill_grey(start = 0.1, end = 0.9)

p1

# color by month
chulls.month <- ddply(gg, .(Month), function(gg) gg[chull(gg$NMDS1, gg$NMDS2), ])

# NMDS plot, color by site
p2 <- ggplot(data=gg, aes(x=NMDS1, y=NMDS2)) + 
  geom_polygon(data=chulls.month, aes(x=NMDS1, y=NMDS2, fill=Month), alpha=0.5) +
  geom_point(data=gg, size = 3, aes(color=Month)) +
  ggtitle("B") +
  theme_bw() +
  theme(
    text = element_text(family = "Arial"),
    plot.title = element_text(size=14),
    axis.text.x = element_text(hjust=1, size = 14),
    axis.text.y = element_blank(),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    panel.background = element_blank(), 
    axis.line = element_line(colour = "black"),
    legend.position = c(0.99,0.01),
    legend.justification = c("right","bottom"),
    legend.background = element_blank(),
    legend.key=element_blank(),
    axis.title = element_blank(),
    axis.text = element_text(size=10),
    legend.title = element_blank(),
    legend.text = element_text(size=12))+
  scale_colour_grey(start = 0.1, end = .9)+
  scale_fill_grey(start = 0.1, end = .9)

p2

# color by habitat
chulls.habitat <- ddply(gg, .(Habitat), function(gg) gg[chull(gg$NMDS1, gg$NMDS2), ])

# NMDS plot, color by habitat
p3 <- ggplot(data=gg, aes(x=NMDS1, y=NMDS2)) + 
  geom_polygon(data=chulls.habitat, aes(x=NMDS1, y=NMDS2, fill=Habitat), alpha=0.5) +
  geom_point(data=gg, size = 3, aes(color=Habitat)) +
  ggtitle("C") +
  theme_bw() +
  theme(
    text = element_text(family = "Arial"),
    plot.title = element_text(size=14),
    axis.text.x = element_text(hjust=1, size = 14),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    panel.background = element_blank(), 
    axis.line = element_line(colour = "black"),
    legend.position = c(0.99,0.01),
    legend.justification = c("right","bottom"),
    legend.background = element_blank(),
    legend.key=element_blank(),
    axis.title = element_blank(),
    axis.text = element_text(size=14),
    legend.title = element_blank(),
    legend.text = element_text(size=12))+
  scale_colour_grey(start = 0.1, end = .7)+
  scale_fill_grey(start = 0.1, end = .7)

p3

#arrange
#g <- grid.arrange(arrangeGrob(p1), (p2), (p3),left= text_grob("NMDS2", rot = 90, vjust = 1, hjust = 0.2), bottom= text_grob("NMDS1", rot = 0, vjust = 0, hjust = 0.5), heights = c(1,1), widths = c(1,1))

#check
#g

#ggsave("Fig_NMDS_bat.tiff",g, height = 10, width = 12)

# Create metadata from rownames 'sample'
env <- gg[,c(1,4:7)]

# Assess dispersion (variance) using ANOVA
# Create distance matrix based on abun data using Bray Curtis dissimilarity
sor<-vegdist(calls.notnull2, "bray", binary=TRUE)

# Calculate beta dispersion (homogeneity needed for adonis)
# Break it down by study to ensure balanced design
bd.site<-betadisper(sor, as.factor(env$Site))
bd.month<-betadisper(sor, as.factor(env$Month))
bd.habitat<-betadisper(sor, as.factor(env$Habitat))

# check for heterogeneity of beta dispersions within groups BALANCED DESIGN
set.seed(1234)
anova(bd.site) # n/s
anova(bd.month) # n/s
anova(bd.habitat) # n/s

pdf("BetaDispersion.pdf")
par(mfrow=c(2,2))
boxplot(bd.site, main="Site")
boxplot(bd.month, main="Month")
boxplot(bd.habitat, main="Habitat")
dev.off()

# Use ADONIS to test significance of groupings 
test1<-adonis(sor~Habitat, data=env, permutations=999, strata = env$Site)
test1
          #Df SumsOfSqs MeanSqs F.Model     R2 Pr(>F)
#Habitat    1    0.4399 0.43988  4.3279 0.10472      1
#Residuals 37    3.7606 0.10164         0.89528       
#Total     38    4.2005                 1.00000  

test2<-adonis(sor~Site, data=env, permutations=999, strata=env$Habitat)
test2
          #Df SumsOfSqs MeanSqs F.Model      R2 Pr(>F)   
#Site       3    1.3341 0.44469  5.4297 0.31739  0.002 **
#Residuals 35    2.8665 0.08190        0.68261          
#Total     38    4.2950                 1.00000   

test3<-adonis(sor~Month, data=env, permutations=999, strata=env$Site)
test3
          #Df SumsOfSqs MeanSqs F.Model     R2 Pr(>F)  
#Month      2    0.4589 0.22943  2.2074 0.10924  0.025 *
#Residuals 36    3.7417 0.10393         0.89076         
#Total     38    4.2005                 1.00000    

test4<-adonis(sor~Site*Month, data=env, permutations=999, strata=env$Habitat)
test4
            #Df SumsOfSqs MeanSqs F.Model      R2 Pr(>F)   
#Site        3    1.3341 0.44469  5.4012 0.31759  0.001 ***
#Month       2    0.4286 0.21428  2.6027 0.10203  0.038 *  
#Site:Month  6    0.2150 0.03583  0.4352 0.05118  0.925    
#Residuals  27    2.2229 0.08233         0.52920           
#Total      38    4.2005                 1.00000 


#############################################
# Fit environmental variables
# Read in metadata
B <-read.csv(file='metadata3.csv',head=TRUE)
names(B)[1] <- "SampleName"

# Create dataframes for vegan
# Split up SampleName with pkg 'stringr'
B.1<-data.frame(B, do.call(rbind, str_split(B$SampleName,"_")), stringsAsFactors = FALSE)
names(B.1)[10:13] <- c("Site","Day","Month","Habitat")

rownames(B.1) <- B.1$SampleName
B.1$SampleName <- NULL

# rename metadata df
df.env <- B.1
# remove trailing columns (Site,Day,Month,Habitat)
df.envir <- df.env[,-c(9:12)]

fit <- envfit(nmds2, df.envir, perm = 999)
fit.vectors <- fit[[1]]
fit.pvals <- fit[[1]]$pvals
fit.df <- as.data.frame(fit.vectors[[1]])
fit.df$pvals <- fit.pvals

fit.df.sig <- fit.df[fit.df$pvals <0.05,]

fit.df.sig$x <- 0
fit.df.sig$y <- 0

#Primary (p= 0.002) and secondary (p= 0.007) veg significant

# NMDS plot, add sig env vars
p4 <- ggplot(data=gg, aes(x=NMDS1, y=NMDS2)) + 
  geom_segment(fit.df.sig, 
               mapping=aes(x=x,y=y,xend=NMDS1, yend=NMDS2), 
               arrow=arrow(angle=25, length=unit(0.10, "inches")), 
               size=0.5,
               color="black") +
  geom_text(fit.df.sig,
            mapping=aes(x=NMDS1*1.05, y=NMDS2*1.05, label=rownames(fit.df.sig)),
            hjust="outward", vjust="outward", size=4, color="black") +
  geom_point(data=gg, size = 3, aes(color=Habitat)) +
  ggtitle("D") +
  theme_bw() +
  theme(
    text = element_text(family = "Arial"),
    plot.title = element_text(size=14),
    axis.text.y =  element_blank(),
    axis.text.x = element_text(size=14),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    panel.background = element_blank(), 
    axis.line = element_line(colour = "black"),
    legend.key=element_blank(),
    legend.background = element_blank(),
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    legend.text = element_text(size=12),
    legend.position = c(1,0.01),
  legend.justification = c("right","bottom"))+
  guides(color=guide_legend(ncol=2)) +
scale_colour_grey(start = 0.1, end = .7)+
  scale_fill_grey(start = 0.1, end = .7)

p4

#arrange
g <- grid.arrange(arrangeGrob(p1), (p2), (p3), (p4), left= text_grob("NMDS2", rot = 90, vjust = 1, hjust = 0.2, size = 16), bottom= text_grob("NMDS1", rot = 0, vjust = 0, hjust = 0.5, size = 16), heights = c(1,1), widths = c(1,1))

ggsave("Fig3_bat_NMDS_envfit.tiff", g, height = 10, width = 12, dpi = 800)
# only plotted fitted environmental variables with p-val <0.05
